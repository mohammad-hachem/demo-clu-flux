apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: testelias
  name: my-nginx-image-live
  labels:
    app: my-nginx-image-live
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-nginx-image-live
  template:
    metadata:
      labels:
        app: my-nginx-image-live
    spec:
      containers:
      - name: my-nginx-image-live
        image: my-nginx-image-live
        ports:
        - containerPort: 80
---

apiVersion: v1
kind: Service
metadata:
  namespace: testelias
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
    - port: 8082
      targetPort: 80
      nodePort: 30333
  type: LoadBalancer
---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: rollout-bluegreen
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: rollout-bluegreen
  template:
    metadata:
      labels:
        app: rollout-bluegreen
    spec:
      containers:
        - name: my-nginx-image-rollout
          image: my-nginx-image-rollout
          imagePullPolicy: Always
  strategy:
    blueGreen: 
      # activeService specifies the service to update with the new template hash at time of promotion.
      # This field is mandatory for the blueGreen update strategy.
      activeService: rollout-bluegreen-active
      # previewService specifies the service to update with the new template hash before promotion.
      # This allows the preview stack to be reachable without serving production traffic.
      # This field is optional.
      previewService: rollout-bluegreen-preview
      # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
      # immediately before the promotion. If omitted, the default behavior is to promote the new
      # stack as soon as the ReplicaSet are completely ready/available.
      # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
      autoPromotionEnabled: false
---
---
apiVersion: v1
kind: Service
metadata:
  name: rollout-bluegreen-active
spec:
  ports:
    - port: 8083
      targetPort: http
      protocol: TCP
      name: http
  type: LoadBalancer
  selector:
    app: rollout-bluegreen
---
apiVersion: v1
kind: Service
metadata:
  name: rollout-bluegreen-preview
spec:
  ports:
    - port: 8084
      targetPort: http
      protocol: TCP
      name: http
  type: LoadBalancer    
  selector:
    app: rollout-bluegreen
